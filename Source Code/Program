#include <LedControl.h>  // Library untuk MAX7219

// Pin konfigurasi
const int sensorPin = A0;
const int pumpPin = 3;//D3
const int dinPin = 11;//D11
const int clkPin = 13;//D13
const int csPin = 10//;D10

LedControl lc = LedControl(dinPin, clkPin, csPin, 1); // Hanya 1 matrix

void setup() {
  Serial.begin(9600);
  pinMode(pumpPin, OUTPUT);
  digitalWrite(pumpPin, LOW);

  lc.shutdown(0, false);
  lc.setIntensity(0, 8);
  lc.clearDisplay(0);
}

void loop() {
  int moisture = analogRead(sensorPin);
  Serial.print("Kelembapan: ");
  Serial.println(moisture);

  if (moisture > 700) {
    // KERING
    digitalWrite(pumpPin, HIGH);
    showSadFace();
  } else if (moisture >= 400 && moisture <= 700) {
    // NORMAL
    digitalWrite(pumpPin, LOW);
    showNeutralFace();
  } else {
    // BASAH
    digitalWrite(pumpPin, LOW);
    showHappyFace();
  }

  delay(1000); // Delay 1 detik
}

// Fungsi menampilkan wajah sedih
void showSadFace() {
  byte sadFace[8] = {
    B00111100,
    B01000010,
    B10100101,
    B10000001,
    B10100101,
    B10011001,
    B01000010,
    B00111100
  };
  displayMatrix(sadFace);
}

// Fungsi menampilkan wajah datar
void showNeutralFace() {
  byte neutralFace[8] = {
    B00111100,
    B01000010,
    B10100101,
    B10000001,
    B10100101,
    B10000001,
    B01000010,
    B00111100
  };
  displayMatrix(neutralFace);
}

// Fungsi menampilkan wajah senyum
void showHappyFace() {
  byte happyFace[8] = {
    B00111100,
    B01000010,
    B10100101,
    B10000001,
    B10011001,
    B10100101,
    B01000010,
    B00111100
  };
  displayMatrix(happyFace);
}

// Menampilkan array ke LED matrix
void displayMatrix(byte face[8]) {
  for (int i = 0; i < 8; i++) {
    lc.setRow(0, i, face[i]);
  }
}
