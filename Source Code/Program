// Konfigurasi pin
const int sensorPin = A0;
const int pumpPin = 3;
const int dinPin = 11;  // Data In ke MAX7219
const int clkPin = 13;  // Clock ke MAX7219
const int csPin  = 10;  // Load (CS) ke MAX7219

// =============================
// === Data Wajah (8x8 row) ===
// =============================
byte sadFace[8] = {
  B01100110,
  B10011001,
  B00000000,
  B00011000,
  B00000000,
  B00000000,
  B01111110,
  B10000001
};

byte neutralFace[8] = {
  B00000000,
  B11100111,
  B11100111,
  B00000000,
  B00111100,
  B00000000,
  B01111110,
  B01111110
};

byte happyFace[8] = {
  B01000010,
  B10100101,
  B01000010,
  B00011000,
  B00011000,
  B00000000,
  B01000010,
  B00111100
};

void setup() {
  Serial.begin(9600);

  pinMode(pumpPin, OUTPUT);
  digitalWrite(pumpPin, LOW);

  pinMode(dinPin, OUTPUT);
  pinMode(clkPin, OUTPUT);
  pinMode(csPin, OUTPUT);
  digitalWrite(csPin, HIGH);

  initMAX7219();
}

void loop() {
  int moisture = analogRead(sensorPin);
  int moisturePercent = map(moisture, 0, 1023, 100, 0);
  Serial.println(moisturePercent);

  if (moisturePercent <= 20) {
    digitalWrite(pumpPin, HIGH);
    showFace(sadFace);
  } else if (moisturePercent > 20 && moisturePercent <= 40) {
    digitalWrite(pumpPin, LOW);
    showFace(neutralFace);
  } else {
    digitalWrite(pumpPin, LOW);
    showFace(happyFace);
  }

  delay(1000);
}

// ==============================
// === Fungsi Display Matrix ====
// ==============================
void showFace(byte face[8]) {
  for (byte i = 0; i < 8; i++) {
    sendCommand(i + 1, face[i]); // Baris 1–8 (MAX7219 pakai 1–8, bukan 0–7)
  }
}

void sendCommand(byte address, byte data) {
  digitalWrite(csPin, LOW);
  shiftOut(dinPin, clkPin, MSBFIRST, address);
  shiftOut(dinPin, clkPin, MSBFIRST, data);
  digitalWrite(csPin, HIGH);
}

void initMAX7219() {
  sendCommand(0x09, 0x00); // Decode Mode: none
  sendCommand(0x0A, 0x08); // Intensity: 8 (0–15)
  sendCommand(0x0B, 0x07); // Scan limit = 8 LEDs
  sendCommand(0x0C, 0x01); // Exit shutdown mode
  sendCommand(0x0F, 0x00); // Display test = off
  clearDisplay();
}

void clearDisplay() {
  for (byte i = 1; i <= 8; i++) {
    sendCommand(i, 0x00);
  }
}
